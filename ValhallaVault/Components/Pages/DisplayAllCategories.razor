@page "/DisplayAllCategories"
@using ValhallaVault.Data.Models
@using ValhallaVault.Components.Pages.RazorComponents
@using ValhallaVault.Data.Repositories
@inject Microsoft.AspNetCore.Components.NavigationManager Navigation
@inject ICategoryRepository CategoryRepo
@rendermode InteractiveServer

@if (AllCategories == null)
{
    <div class="container mt-4">
        <p class="alert alert-danger">Something Went Wrong! Unable to Gather all of the Categories</p>
    </div>
    return;
}

@if (AllCategories.Count <= 0)
{
    <div class="container mt-4">
        <p class="alert alert-warning">Something went Wrong! There were no categories in the database!</p>
    </div>
}



<div class="container mt-4">
    <h1>Categories:</h1>
    <input type="text" @bind="_searchText" placeholder="Searching for something?"  />
    <button @onclick="FilterCategories">Search</button>
    <!-- Apply Bootstrap styling to the links -->
    <div class="list-group">
        @foreach (var category in FilteredCategories)
        {
            <a href="@($"{Navigation.BaseUri}DisplayAllCategories/DisplayCategory/{category.Id}")" class="list-group-item list-group-item-action">@category.Name</a>
        }
    </div>
</div>

@code {

    public List<CategoryModel>? AllCategories { get; set; }
    private List<CategoryModel>? FilteredCategories { get; set; }
    private string _searchText = "";

    private void FilterCategories()
    {
        if (AllCategories == null) return;

        FilteredCategories = AllCategories
            .Where(category => string.IsNullOrEmpty(_searchText) || category.Name.IndexOf(_searchText, StringComparison.OrdinalIgnoreCase) != -1)
            .ToList();
    }

    protected override async Task OnInitializedAsync()
    {
        AllCategories = (await CategoryRepo.GetAllCategoriesAsync()).ToList();
        FilteredCategories = AllCategories;
    }
}