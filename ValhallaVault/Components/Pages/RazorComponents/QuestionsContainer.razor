@using ValhallaVault.Data.Models

<h3>QuestionsContainer</h3>

@if (DisplayTheseQuestions == null)
{
    <h1>Something Went wrong! Unable to display the Questions</h1>
    
    return;
}
@* @if (HasNullEntry())
{
    
    <h1>Something Went wrong! One of the Questions was null/One of the questions was not found.</h1>

} *@


<div>
    <p>Question @(_index + 1 )/@DisplayTheseQuestions.Count</p>
    @if (_moreQuestionsUnAnswerd)
    {
        <Question TheQuestion="@DisplayTheseQuestions[_index]" StyleToAddToCorrectAnswer="@StyleForCorrectAnswer" StyleToAddToWrongAnswer="@StyleForWrongAnswer" _resetAnswerState="@_resetAnswerState"></Question>
    }
    else
    {
        <p>You Have Answerd all questions</p>

        @* make it so that the button that is beneeth this is greyed out *@
        
    }
    
    <button @onclick="BackOneQuestion" disabled="@_disableBackButton">Back</button>
    <button @onclick="NextOneQuestion"style="width: 100px" disabled="@(!_moreQuestionsUnAnswerd)">@btnText</button>

    
</div>



@code {
    [Parameter]
    public List<QuestionModel>? DisplayTheseQuestions{ get; set; }

    public  QuestionModel? QuestionShown { get; set; } 
    private string btnText = "Correct it";
    public string StyleForCorrectAnswer { get; set; }
    public string StyleForWrongAnswer { get; set; }
    private int _index = 0;
    private bool _resetAnswerState = false;
    private bool _moreQuestionsUnAnswerd = true;
    private bool _disableBackButton = true;



    //TODO MAKE IT SO THAT USER CAN ONLY TICK ONE BOX


    public void NextOneQuestion()
    {
        if (btnText == "Correct it")
        {
            //TODO CORRECT THE ANSWER
            StyleForCorrectAnswer = "background-color:green;";
            StyleForWrongAnswer = "background-color:red;";
            btnText = "Next";
            _resetAnswerState = false;
            _disableBackButton = true;
            return;
        }

        if (_index +1 >= DisplayTheseQuestions.Count)
        {
            //TODO make sometin happen when there are no more questions left
            _moreQuestionsUnAnswerd = false;
            return;
        }


        _index++;
        btnText = "Correct it";
        StyleForCorrectAnswer = "";
        StyleForWrongAnswer = "";
        _resetAnswerState = true;
        _disableBackButton = false;

    }

    private void BackOneQuestion()
    {
        if(_index <=0)return;
        _index--;
    }

    public bool HasNullEntry()
    {
        Console.WriteLine("dlfgkbn");
        return DisplayTheseQuestions?.Any(entry => entry == null) ?? false;
    }
}
