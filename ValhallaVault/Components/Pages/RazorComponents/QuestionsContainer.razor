@using ValhallaVault.Data.Models

<h3>QuestionsContainer</h3>

@if (DisplayTheseQuestions == null)
{
    <h1>Something Went wrong! Unable to display the Questions</h1>
    
    return;
}
@* @if (HasNullEntry())
{
    
    <h1>Something Went wrong! One of the Questions was null/One of the questions was not found.</h1>

} *@


<div>
    <p>Question @(_index + 1 )/@DisplayTheseQuestions.Count</p>
    <Question TheQuestion="@DisplayTheseQuestions[_index]" StyleToAddToCorrectAnswer="@StyleForCorrectAnswer"></Question>

    <button @onclick="NextQuestion"style="width: 100px">@btnText</button>
</div>



@code {
    [Parameter]
    public List<QuestionModel>? DisplayTheseQuestions{ get; set; }

    public  QuestionModel? QuestionShown { get; set; } 
    private string btnText = "Correct it";
    public string StyleForCorrectAnswer { get; set; }
    private int _index = 0;
    




    //TODO MAKE IT SO THAT USER CAN ONLY TICK ONE BOX



    public void NextQuestion()
    {
        if (btnText == "Correct it")
        {
            //TODO CORRECT THE ANSWER
            StyleForCorrectAnswer = "background-color:green;";
            btnText = "Next";
            return;
        }

        if (_index +1 >= DisplayTheseQuestions.Count)
        {
            //TODO make sometin happen when there are no more questions left
            return;
        }


        _index++;
        btnText = "Correct it";

    }

    public bool HasNullEntry()
    {
        Console.WriteLine("dlfgkbn");
        return DisplayTheseQuestions?.Any(entry => entry == null) ?? false;
    }
}
