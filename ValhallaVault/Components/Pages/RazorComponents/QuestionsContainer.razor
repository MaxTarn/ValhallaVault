@using ValhallaVault.Data.Models
@using ValhallaVault.Data.Repositories


<h3>QuestionsContainer</h3>

@if (DisplayTheseQuestions == null)
{
    <h1>Something Went wrong! Unable to display the Questions</h1>
    
    return;
}

@if (DisplayTheseQuestions.Count == 0)
{
    <h1>Something went wrong! No questions found for this Subcategory.</h1>
    return;
}

<div>
    <p>Question @(_index + 1 )/@DisplayTheseQuestions.Count</p>

    @if (_moreQuestionsUnAnswerd)
    {
        <Question TheQuestion="@DisplayTheseQuestions[_index]" StyleToAddToCorrectAnswer="@StyleForCorrectAnswer" StyleToAddToWrongAnswer="@StyleForWrongAnswer" _resetAnswerState="@_resetAnswerState"></Question>
    }
    else
    {
        <p>You Have Answerd all questions</p>

        @* make it so that the button that is beneeth this is greyed out *@
        
    }
    
    <button @onclick="BackOneQuestion" style="width:100px;"  disabled="@_disableBackButton">Back</button>
    <button @onclick="CorrectAnswers" style="width: 180px" disabled="@_disableCorrectTheAnswersButton">Correct Answers</button>
    <button @onclick="NextQuestion" style="width:100px;" disabled="@_disableNextQuestionButton">Next</button>
    

</div>



@code {
    [Parameter]
    public List<QuestionModel>? DisplayTheseQuestions{ get; set; }

    public  QuestionModel? QuestionShown { get; set; } 
    private string btnText = "Correct it";
    public string StyleForCorrectAnswer { get; set; }
    public string StyleForWrongAnswer { get; set; }
    private int _index = 0;
    private bool _resetAnswerState = false;

    private bool _moreQuestionsUnAnswerd = true;


    private bool _disableBackButton = true;
    private bool _disableCorrectTheAnswersButton = false;
    private bool _disableNextQuestionButton = true;

    //TODO MAKE IT SO THAT USER CAN ONLY TICK ONE BOX




    private void BackOneQuestion()
    {
        if(_disableBackButton)return;
        if (_index <= 0) return;
        _index--;
        _disableBackButton = CheckIfBackButtonShouldBeEnabled();
    }

    private void CorrectAnswers()
    {
        StyleForCorrectAnswer = "background-color:green;";
        StyleForWrongAnswer = "background-color:red;";
        _resetAnswerState = false;
        _disableNextQuestionButton = false;
    }

    private void NextQuestion()
    {
        StyleForCorrectAnswer = "";
        StyleForWrongAnswer = "";
        _resetAnswerState = true;
        _disableBackButton = CheckIfBackButtonShouldBeEnabled();
        if (_index + 1 <= DisplayTheseQuestions.Count) _index++;
    }


    protected override Task OnInitializedAsync()
    {
        
        return base.OnInitializedAsync();
    }


    
    private bool CheckIfBackButtonShouldBeEnabled()
    {
        if (DisplayTheseQuestions == null || DisplayTheseQuestions.Count <= 0)
        {
            return false; // If there are no questions, the Back button should be disabled
        }

        return _index > 0;
    }

}
